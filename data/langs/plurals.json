{
   "forms" : {
      "ends in 0 excluding 0, 10" : {
         "examples" : "20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000000",
         "expression" : "n%10==0&&n!=0&&n!=10",
         "typical" : 20
      },
      "ends in 0 excluding 10" : {
         "examples" : "0 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000000",
         "expression" : "n%10==0&&n!=10",
         "typical" : 20
      },
      "ends in 0 or ends in 11-19" : {
         "examples" : "0 10 11 12 13 14 15 16 17 18 19 20 30 40 50 60 70 80 90 100 110 111 112 113 114 115 116 117 118 119 120 130 140 150 160 170 180 190 200 210 211 212 213 214 215 216 217 218 219 220 230 240 250 260 270 280 290 300 310 311 312 313 314 315 316 317 318 319 320 330 340 350 360 370 380 390 400 410 411 412 413 414 415 416 417 418 419 420 430 440 450 460 470 480 490 500 510 511 512 513 514 515 516 517 518 519 520 530 540 550 560 570 580 590 600 610 611 612 613 614 615 616 617 618 619 620 630 640 650 660 670 680 690 700 710 711 712 713 714 715 716 717 718 719 720 730 740 750 760 770 780 790 800 810 811 812 813 814 815 816 817 818 819 820 830 840 850 860 870 880 890 900 910 911 912 913 914 915 916 917 918 919 920 930 940 950 960 970 980 990 1000000",
         "expression" : "n%10==0||(11\u003C=n%100&&n%100\u003C=19)",
         "typical" : 10
      },
      "ends in 0 or ends in 12-19" : {
         "examples" : "0 10 12 13 14 15 16 17 18 19 20 30 40 50 60 70 80 90 100 110 112 113 114 115 116 117 118 119 120 130 140 150 160 170 180 190 200 210 212 213 214 215 216 217 218 219 220 230 240 250 260 270 280 290 300 310 312 313 314 315 316 317 318 319 320 330 340 350 360 370 380 390 400 410 412 413 414 415 416 417 418 419 420 430 440 450 460 470 480 490 500 510 512 513 514 515 516 517 518 519 520 530 540 550 560 570 580 590 600 610 612 613 614 615 616 617 618 619 620 630 640 650 660 670 680 690 700 710 712 713 714 715 716 717 718 719 720 730 740 750 760 770 780 790 800 810 812 813 814 815 816 817 818 819 820 830 840 850 860 870 880 890 900 910 912 913 914 915 916 917 918 919 920 930 940 950 960 970 980 990 1000000",
         "expression" : "n%10==0||(12\u003C=n%100&&n%100\u003C=19)",
         "typical" : 10
      },
      "ends in 0, 6, 9 excluding 0" : {
         "examples" : "6 9 10 16 19 20 26 29 30 36 39 40 46 49 50 56 59 60 66 69 70 76 79 80 86 89 90 96 99 100 106 109 110 116 119 120 126 129 130 136 139 140 146 149 150 156 159 160 166 169 170 176 179 180 186 189 190 196 199 200 206 209 210 216 219 220 226 229 230 236 239 240 246 249 250 256 259 260 266 269 270 276 279 280 286 289 290 296 299 300 306 309 310 316 319 320 326 329 330 336 339 340 346 349 350 356 359 360 366 369 370 376 379 380 386 389 390 396 399 400 406 409 410 416 419 420 426 429 430 436 439 440 446 449 450 456 459 460 466 469 470 476 479 480 486 489 490 496 499 500 506 509 510 516 519 520 526 529 530 536 539 540 546 549 550 556 559 560 566 569 570 576 579 580 586 589 590 596 599 600 606 609 610 616 619 620 626 629 630 636 639 640 646 649 650 656 659 660 666 669 670 676 679 680 686 689 690 696 699 700 706 709 710 716 719 720 726 729 730 736 739 740 746 749 750 756 759 760 766 769 770 776 779 780 786 789 790 796 799 800 806 809 810 816 819 820 826 829 830 836 839 840 846 849 850 856 859 860 866 869 870 876 879 880 886 889 890 896 899 900 906 909 910 916 919 920 926 929 930 936 939 940 946 949 950 956 959 960 966 969 970 976 979 980 986 989 990 996 999 1000000",
         "expression" : "(n%10==0||n%10==6||n%10==9)&&n!=0",
         "typical" : "6"
      },
      "ends in 00, 20, 40, 60, 80" : {
         "examples" : "0 20 40 60 80 100 120 140 160 180 200 220 240 260 280 300 320 340 360 380 400 420 440 460 480 500 520 540 560 580 600 620 640 660 680 700 720 740 760 780 800 820 840 860 880 900 920 940 960 980 1000000",
         "expression" : "n%100==0||n%100==20||n%100==40||n%100==60||n%100==80",
         "typical" : 20
      },
      "ends in 00-02 excluding 0-2" : {
         "examples" : "100 101 102 200 201 202 300 301 302 400 401 402 500 501 502 600 601 602 700 701 702 800 801 802 900 901 902 1000000",
         "expression" : "0\u003C=n%100&&n%100\u003C=2&&!(0\u003C=n&&n\u003C=2)",
         "typical" : 100
      },
      "ends in 000000 excluding 0" : {
         "examples" : "1000000",
         "expression" : "n%1000000==0&&n!=0",
         "typical" : 1000000
      },
      "ends in 01" : {
         "examples" : "1 101 201 301 401 501 601 701 801 901",
         "expression" : "n%100==1",
         "typical" : 1
      },
      "ends in 02" : {
         "examples" : "2 102 202 302 402 502 602 702 802 902",
         "expression" : "n%100==2",
         "typical" : 2
      },
      "ends in 03-04" : {
         "examples" : "3 4 103 104 203 204 303 304 403 404 503 504 603 604 703 704 803 804 903 904",
         "expression" : "3\u003C=n%100&&n%100\u003C=4",
         "typical" : 3
      },
      "ends in 03-10" : {
         "examples" : "3 4 5 6 7 8 9 10 103 104 105 106 107 108 109 110 203 204 205 206 207 208 209 210 303 304 305 306 307 308 309 310 403 404 405 406 407 408 409 410 503 504 505 506 507 508 509 510 603 604 605 606 607 608 609 610 703 704 705 706 707 708 709 710 803 804 805 806 807 808 809 810 903 904 905 906 907 908 909 910",
         "expression" : "3\u003C=n%100&&n%100\u003C=10",
         "typical" : 3
      },
      "ends in 1" : {
         "examples" : "1 11 21 31 41 51 61 71 81 91 101 111 121 131 141 151 161 171 181 191 201 211 221 231 241 251 261 271 281 291 301 311 321 331 341 351 361 371 381 391 401 411 421 431 441 451 461 471 481 491 501 511 521 531 541 551 561 571 581 591 601 611 621 631 641 651 661 671 681 691 701 711 721 731 741 751 761 771 781 791 801 811 821 831 841 851 861 871 881 891 901 911 921 931 941 951 961 971 981 991",
         "expression" : "n%10==1",
         "typical" : 1
      },
      "ends in 1 not ends in 11" : {
         "examples" : "1 21 31 41 51 61 71 81 91 101 121 131 141 151 161 171 181 191 201 221 231 241 251 261 271 281 291 301 321 331 341 351 361 371 381 391 401 421 431 441 451 461 471 481 491 501 521 531 541 551 561 571 581 591 601 621 631 641 651 661 671 681 691 701 721 731 741 751 761 771 781 791 801 821 831 841 851 861 871 881 891 901 921 931 941 951 961 971 981 991",
         "expression" : "n%10==1&&n%100!=11",
         "typical" : 1
      },
      "ends in 1 not ends in 11 excluding 1, 11" : {
         "examples" : "21 31 41 51 61 71 81 91 101 121 131 141 151 161 171 181 191 201 221 231 241 251 261 271 281 291 301 321 331 341 351 361 371 381 391 401 421 431 441 451 461 471 481 491 501 521 531 541 551 561 571 581 591 601 621 631 641 651 661 671 681 691 701 721 731 741 751 761 771 781 791 801 821 831 841 851 861 871 881 891 901 921 931 941 951 961 971 981 991",
         "expression" : "n%10==1&&n%100!=11&&n!=1&&n!=11",
         "typical" : 21
      },
      "ends in 1 not ends in 11, 71, 91" : {
         "examples" : "1 21 31 41 51 61 81 101 121 131 141 151 161 181 201 221 231 241 251 261 281 301 321 331 341 351 361 381 401 421 431 441 451 461 481 501 521 531 541 551 561 581 601 621 631 641 651 661 681 701 721 731 741 751 761 781 801 821 831 841 851 861 881 901 921 931 941 951 961 981",
         "expression" : "n%10==1&&n%100!=11&&n%100!=71&&n%100!=91",
         "typical" : 1
      },
      "ends in 1, 2, 5, 7, 8 or ends in 20, 50, 70, 80" : {
         "examples
         "expression" : "n%10==1||n%10==2||n%10==5||n%10==7||n%10==8||n%100==20||n%100==50||n%100==70||n%100==80",
         "typical" : 1
      },
      "ends in 1-2 excluding 1" : {
         "examples" : "2 11 12 21 22 31 32 41 42 51 52 61 62 71 72 81 82 91 92 101 102 111 112 121 122 131 132 141 142 151 152 161 162 171 172 181 182 191 192 201 202 211 212 221 222 231 232 241 242 251 252 261 262 271 272 281 282 291 292 301 302 311 312 321 322 331 332 341 342 351 352 361 362 371 372 381 382 391 392 401 402 411 412 421 422 431 432 441 442 451 452 461 462 471 472 481 482 491 492 501 502 511 512 521 522 531 532 541 542 551 552 561 562 571 572 581 582 591 592 601 602 611 612 621 622 631 632 641 642 651 652 661 662 671 672 681 682 691 692 701 702 711 712 721 722 731 732 741 742 751 752 761 762 771 772 781 782 791 792 801 802 811 812 821 822 831 832 841 842 851 852 861 862 871 872 881 882 891 892 901 902 911 912 921 922 931 932 941 942 951 952 961 962 971 972 981 982 991 992",
         "expression" : "(1\u003C=n%10&&n%10\u003C=2)&&n!=1",
         "typical" : 2
      },
      "ends in 1-2 not ends in 11-12" : {
         "examples" : "1 2 21 22 31 32 41 42 51 52 61 62 71 72 81 82 91 92 101 102 121 122 131 132 141 142 151 152 161 162 171 172 181 182 191 192 201 202 221 222 231 232 241 242 251 252 261 262 271 272 281 282 291 292 301 302 321 322 331 332 341 342 351 352 361 362 371 372 381 382 391 392 401 402 421 422 431 432 441 442 451 452 461 462 471 472 481 482 491 492 501 502 521 522 531 532 541 542 551 552 561 562 571 572 581 582 591 592 601 602 621 622 631 632 641 642 651 652 661 662 671 672 681 682 691 692 701 702 721 722 731 732 741 742 751 752 761 762 771 772 781 782 791 792 801 802 821 822 831 832 841 842 851 852 861 862 871 872 881 882 891 892 901 902 921 922 931 932 941 942 951 952 961 962 971 972 981 982 991 992",
         "expression" : "(1\u003C=n%10&&n%10\u003C=2)&&!(11\u003C=n%100&&n%100\u003C=12)",
         "typical" : "1"
      },
      "ends in 11-19" : {
         "examples" : "11 12 13 14 15 16 17 18 19 111 112 113 114 115 116 117 118 119 211 212 213 214 215 216 217 218 219 311 312 313 314 315 316 317 318 319 411 412 413 414 415 416 417 418 419 511 512 513 514 515 516 517 518 519 611 612 613 614 615 616 617 618 619 711 712 713 714 715 716 717 718 719 811 812 813 814 815 816 817 818 819 911 912 913 914 915 916 917 918 919",
         "expression" : "11\u003C=n%100&&n%100\u003C=19",
         "typical" : 11
      },
      "ends in 2" : {
         "examples" : "2 12 22 32 42 52 62 72 82 92 102 112 122 132 142 152 162 172 182 192 202 212 222 232 242 252 262 272 282 292 302 312 322 332 342 352 362 372 382 392 402 412 422 432 442 452 462 472 482 492 502 512 522 532 542 552 562 572 582 592 602 612 622 632 642 652 662 672 682 692 702 712 722 732 742 752 762 772 782 792 802 812 822 832 842 852 862 872 882 892 902 912 922 932 942 952 962 972 982 992",
         "expression" : "n%10==2",
         "typical" : 2
      },
      "ends in 2 not ends in 12" : {
         "examples" : "2 22 32 42 52 62 72 82 92 102 122 132 142 152 162 172 182 192 202 222 232 242 252 262 272 282 292 302 322 332 342 352 362 372 382 392 402 422 432 442 452 462 472 482 492 502 522 532 542 552 562 572 582 592 602 622 632 642 652 662 672 682 692 702 722 732 742 752 762 772 782 792 802 822 832 842 852 862 872 882 892 902 922 932 942 952 962 972 982 992",
         "expression" : "n%10==2&&n%100!=12",
         "typical" : 2
      },
      "ends in 2 not ends in 12, 72, 92" : {
         "examples" : "2 22 32 42 52 62 82 102 122 132 142 152 162 182 202 222 232 242 252 262 282 302 322 332 342 352 362 382 402 422 432 442 452 462 482 502 522 532 542 552 562 582 602 622 632 642 652 662 682 702 722 732 742 752 762 782 802 822 832 842 852 862 882 902 922 932 942 952 962 982",
         "expression" : "n%10==2&&n%100!=12&&n%100!=72&&n%100!=92",
         "typical" : 2
      },
      "ends in 2-3 not ends in 12-13" : {
         "examples" : "2 3 22 23 32 33 42 43 52 53 62 63 72 73 82 83 92 93 102 103 122 123 132 133 142 143 152 153 162 163 172 173 182 183 192 193 202 203 222 223 232 233 242 243 252 253 262 263 272 273 282 283 292 293 302 303 322 323 332 333 342 343 352 353 362 363 372 373 382 383 392 393 402 403 422 423 432 433 442 443 452 453 462 463 472 473 482 483 492 493 502 503 522 523 532 533 542 543 552 553 562 563 572 573 582 583 592 593 602 603 622 623 632 633 642 643 652 653 662 663 672 673 682 683 692 693 702 703 722 723 732 733 742 743 752 753 762 763 772 773 782 783 792 793 802 803 822 823 832 833 842 843 852 853 862 863 872 873 882 883 892 893 902 903 922 923 932 933 942 943 952 953 962 963 972 973 982 983 992 993",
         "expression" : "(2\u003C=n%10&&n%10\u003C=3)&&!(12\u003C=n%100&&n%100\u003C=13)",
         "typical" : "2"
      },
      "ends in 2-4" : {
         "examples" : "2 3 4 12 13 14 22 23 24 32 33 34 42 43 44 52 53 54 62 63 64 72 73 74 82 83 84 92 93 94 102 103 104 112 113 114 122 123 124 132 133 134 142 143 144 152 153 154 162 163 164 172 173 174 182 183 184 192 193 194 202 203 204 212 213 214 222 223 224 232 233 234 242 243 244 252 253 254 262 263 264 272 273 274 282 283 284 292 293 294 302 303 304 312 313 314 322 323 324 332 333 334 342 343 344 352 353 354 362 363 364 372 373 374 382 383 384 392 393 394 402 403 404 412 413 414 422 423 424 432 433 434 442 443 444 452 453 454 462 463 464 472 473 474 482 483 484 492 493 494 502 503 504 512 513 514 522 523 524 532 533 534 542 543 544 552 553 554 562 563 564 572 573 574 582 583 584 592 593 594 602 603 604 612 613 614 622 623 624 632 633 634 642 643 644 652 653 654 662 663 664 672 673 674 682 683 684 692 693 694 702 703 704 712 713 714 722 723 724 732 733 734 742 743 744 752 753 754 762 763 764 772 773 774 782 783 784 792 793 794 802 803 804 812 813 814 822 823 824 832 833 834 842 843 844 852 853 854 862 863 864 872 873 874 882 883 884 892 893 894 902 903 904 912 913 914 922 923 924 932 933 934 942 943 944 952 953 954 962 963 964 972 973 974 982 983 984 992 993 994",
         "expression" : "2\u003C=n%10&&n%10\u003C=4",
         "typical" : 2
      },
      "ends in 2-4 not ends in 12-14" : {
         "examples" : "2 3 4 22 23 24 32 33 34 42 43 44 52 53 54 62 63 64 72 73 74 82 83 84 92 93 94 102 103 104 122 123 124 132 133 134 142 143 144 152 153 154 162 163 164 172 173 174 182 183 184 192 193 194 202 203 204 222 223 224 232 233 234 242 243 244 252 253 254 262 263 264 272 273 274 282 283 284 292 293 294 302 303 304 322 323 324 332 333 334 342 343 344 352 353 354 362 363 364 372 373 374 382 383 384 392 393 394 402 403 404 422 423 424 432 433 434 442 443 444 452 453 454 462 463 464 472 473 474 482 483 484 492 493 494 502 503 504 522 523 524 532 533 534 542 543 544 552 553 554 562 563 564 572 573 574 582 583 584 592 593 594 602 603 604 622 623 624 632 633 634 642 643 644 652 653 654 662 663 664 672 673 674 682 683 684 692 693 694 702 703 704 722 723 724 732 733 734 742 743 744 752 753 754 762 763 764 772 773 774 782 783 784 792 793 794 802 803 804 822 823 824 832 833 834 842 843 844 852 853 854 862 863 864 872 873 874 882 883 884 892 893 894 902 903 904 922 923 924 932 933 934 942 943 944 952 953 954 962 963 964 972 973 974 982 983 984 992 993 994",
         "expression" : "(2\u003C=n%10&&n%10\u003C=4)&&!(12\u003C=n%100&&n%100\u003C=14)",
         "typical" : 2
      },
      "ends in 3 not ends in 13" : {
         "examples" : "3 23 33 43 53 63 73 83 93 103 123 133 143 153 163 173 183 193 203 223 233 243 253 263 273 283 293 303 323 333 343 353 363 373 383 393 403 423 433 443 453 463 473 483 493 503 523 533 543 553 563 573 583 593 603 623 633 643 653 663 673 683 693 703 723 733 743 753 763 773 783 793 803 823 833 843 853 863 873 883 893 903 923 933 943 953 963 973 983 993",
         "expression" : "n%10==3&&n%100!=13",
         "typical" : 3
      },
      "ends in 3, 4, 9 not ends in 13, 14, 19, 73, 74, 79, 93, 94, 99" : {
         "examples
         "expression" : "(n%10==3||n%10==4||n%10==9)&&n%100!=13&&n%100!=14&&n%100!=19&&n%100!=73&&n%100!=74&&n%100!=79&&n%100!=93&&n%100!=94&&n%100!=99",
         "typical" : 3
      },
      "ends in 3-4 or ends in 00 not ends in 000" : {
         "examples" : "3 4 13 14 23 24 33 34 43 44 53 54 63 64 73 74 83 84 93 94 100 103 104 113 114 123 124 133 134 143 144 153 154 163 164 173 174 183 184 193 194 200 203 204 213 214 223 224 233 234 243 244 253 254 263 264 273 274 283 284 293 294 300 303 304 313 314 323 324 333 334 343 344 353 354 363 364 373 374 383 384 393 394 400 403 404 413 414 423 424 433 434 443 444 453 454 463 464 473 474 483 484 493 494 500 503 504 513 514 523 524 533 534 543 544 553 554 563 564 573 574 583 584 593 594 600 603 604 613 614 623 624 633 634 643 644 653 654 663 664 673 674 683 684 693 694 700 703 704 713 714 723 724 733 734 743 744 753 754 763 764 773 774 783 784 793 794 800 803 804 813 814 823 824 833 834 843 844 853 854 863 864 873 874 883 884 893 894 900 903 904 913 914 923 924 933 934 943 944 953 954 963 964 973 974 983 984 993 994",
         "expression" : "n%10==3||n%10==4||n%100==0&&n%1000!=0",
         "typical" : 3
      },
      "ends in 3-6" : {
         "examples" : "3 4 5 6 13 14 15 16 23 24 25 26 33 34 35 36 43 44 45 46 53 54 55 56 63 64 65 66 73 74 75 76 83 84 85 86 93 94 95 96 103 104 105 106 113 114 115 116 123 124 125 126 133 134 135 136 143 144 145 146 153 154 155 156 163 164 165 166 173 174 175 176 183 184 185 186 193 194 195 196 203 204 205 206 213 214 215 216 223 224 225 226 233 234 235 236 243 244 245 246 253 254 255 256 263 264 265 266 273 274 275 276 283 284 285 286 293 294 295 296 303 304 305 306 313 314 315 316 323 324 325 326 333 334 335 336 343 344 345 346 353 354 355 356 363 364 365 366 373 374 375 376 383 384 385 386 393 394 395 396 403 404 405 406 413 414 415 416 423 424 425 426 433 434 435 436 443 444 445 446 453 454 455 456 463 464 465 466 473 474 475 476 483 484 485 486 493 494 495 496 503 504 505 506 513 514 515 516 523 524 525 526 533 534 535 536 543 544 545 546 553 554 555 556 563 564 565 566 573 574 575 576 583 584 585 586 593 594 595 596 603 604 605 606 613 614 615 616 623 624 625 626 633 634 635 636 643 644 645 646 653 654 655 656 663 664 665 666 673 674 675 676 683 684 685 686 693 694 695 696 703 704 705 706 713 714 715 716 723 724 725 726 733 734 735 736 743 744 745 746 753 754 755 756 763 764 765 766 773 774 775 776 783 784 785 786 793 794 795 796 803 804 805 806 813 814 815 816 823 824 825 826 833 834 835 836 843 844 845 846 853 854 855 856 863 864 865 866 873 874 875 876 883 884 885 886 893 894 895 896 903 904 905 906 913 914 915 916 923 924 925 926 933 934 935 936 943 944 945 946 953 954 955 956 963 964 965 966 973 974 975 976 983 984 985 986 993 994 995 996",
         "expression" : "3\u003C=n%10&&n%10\u003C=6",
         "typical" : 3
      },
      "ends in 4 not ends in 14" : {
         "examples" : "4 24 34 44 54 64 74 84 94 104 124 134 144 154 164 174 184 194 204 224 234 244 254 264 274 284 294 304 324 334 344 354 364 374 384 394 404 424 434 444 454 464 474 484 494 504 524 534 544 554 564 574 584 594 604 624 634 644 654 664 674 684 694 704 724 734 744 754 764 774 784 794 804 824 834 844 854 864 874 884 894 904 924 934 944 954 964 974 984 994",
         "expression" : "n%10==4&&n%100!=14",
         "typical" : 4
      },
      "ends in 4, 6, 9" : {
         "examples" : "4 6 9 14 16 19 24 26 29 34 36 39 44 46 49 54 56 59 64 66 69 74 76 79 84 86 89 94 96 99 104 106 109 114 116 119 124 126 129 134 136 139 144 146 149 154 156 159 164 166 169 174 176 179 184 186 189 194 196 199 204 206 209 214 216 219 224 226 229 234 236 239 244 246 249 254 256 259 264 266 269 274 276 279 284 286 289 294 296 299 304 306 309 314 316 319 324 326 329 334 336 339 344 346 349 354 356 359 364 366 369 374 376 379 384 386 389 394 396 399 404 406 409 414 416 419 424 426 429 434 436 439 444 446 449 454 456 459 464 466 469 474 476 479 484 486 489 494 496 499 504 506 509 514 516 519 524 526 529 534 536 539 544 546 549 554 556 559 564 566 569 574 576 579 584 586 589 594 596 599 604 606 609 614 616 619 624 626 629 634 636 639 644 646 649 654 656 659 664 666 669 674 676 679 684 686 689 694 696 699 704 706 709 714 716 719 724 726 729 734 736 739 744 746 749 754 756 759 764 766 769 774 776 779 784 786 789 794 796 799 804 806 809 814 816 819 824 826 829 834 836 839 844 846 849 854 856 859 864 866 869 874 876 879 884 886 889 894 896 899 904 906 909 914 916 919 924 926 929 934 936 939 944 946 949 954 956 959 964 966 969 974 976 979 984 986 989 994 996 999",
         "expression" : "n%10==4||n%10==6||n%10==9",
         "typical" : "4"
      },
      "ends in 7-8 not ends in 17-18" : {
         "examples" : "7 8 27 28 37 38 47 48 57 58 67 68 77 78 87 88 97 98 107 108 127 128 137 138 147 148 157 158 167 168 177 178 187 188 197 198 207 208 227 228 237 238 247 248 257 258 267 268 277 278 287 288 297 298 307 308 327 328 337 338 347 348 357 358 367 368 377 378 387 388 397 398 407 408 427 428 437 438 447 448 457 458 467 468 477 478 487 488 497 498 507 508 527 528 537 538 547 548 557 558 567 568 577 578 587 588 597 598 607 608 627 628 637 638 647 648 657 658 667 668 677 678 687 688 697 698 707 708 727 728 737 738 747 748 757 758 767 768 777 778 787 788 797 798 807 808 827 828 837 838 847 848 857 858 867 868 877 878 887 888 897 898 907 908 927 928 937 938 947 948 957 958 967 968 977 978 987 988 997 998",
         "expression" : "(7\u003C=n%10&&n%10\u003C=8)&&!(17\u003C=n%100&&n%100\u003C=18)",
         "typical" : 7
      },
      "is 0" : {
         "examples" : "0",
         "expression" : "n==0",
         "typical" : 0
      },
      "is 0 or ends in 01-10 excluding 1" : {
         "examples" : "0 2 3 4 5 6 7 8 9 10 101 102 103 104 105 106 107 108 109 110 201 202 203 204 205 206 207 208 209 210 301 302 303 304 305 306 307 308 309 310 401 402 403 404 405 406 407 408 409 410 501 502 503 504 505 506 507 508 509 510 601 602 603 604 605 606 607 608 609 610 701 702 703 704 705 706 707 708 709 710 801 802 803 804 805 806 807 808 809 810 901 902 903 904 905 906 907 908 909 910",
         "expression" : "n==0||(1\u003C=n%100&&n%100\u003C=10&&n!=1)",
         "typical" : 2
      },
      "is 0 or ends in 01-19 excluding 1" : {
         "examples" : "0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919",
         "expression" : "n==0||(1\u003C=n%100&&n%100\u003C=19&&n!=1)",
         "typical" : 2
      },
      "is 0 or ends in 02-10" : {
         "examples" : "0 2 3 4 5 6 7 8 9 10 102 103 104 105 106 107 108 109 110 202 203 204 205 206 207 208 209 210 302 303 304 305 306 307 308 309 310 402 403 404 405 406 407 408 409 410 502 503 504 505 506 507 508 509 510 602 603 604 605 606 607 608 609 610 702 703 704 705 706 707 708 709 710 802 803 804 805 806 807 808 809 810 902 903 904 905 906 907 908 909 910",
         "expression" : "n==0||(2\u003C=n%100&&n%100\u003C=10)",
         "typical" : 2
      },
      "is 0 or ends in 02-20, 40, 60, 80" : {
         "examples" : "0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 40 60 80 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 140 160 180 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 240 260 280 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 340 360 380 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 440 460 480 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 540 560 580 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 640 660 680 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 740 760 780 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 840 860 880 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 940 960 980",
         "expression" : "n==0||2\u003C=n%100&&n%100\u003C=20||n%100==40||n%100==60||n%100==80",
         "typical" : 2
      },
      "is 0 or ends in 6 or ends in 40, 60, 90" : {
         "examples" : "0 6 16 26 36 40 46 56 60 66 76 86 90 96 106 116 126 136 140 146 156 160 166 176 186 190 196 206 216 226 236 240 246 256 260 266 276 286 290 296 306 316 326 336 340 346 356 360 366 376 386 390 396 406 416 426 436 440 446 456 460 466 476 486 490 496 506 516 526 536 540 546 556 560 566 576 586 590 596 606 616 626 636 640 646 656 660 666 676 686 690 696 706 716 726 736 740 746 756 760 766 776 786 790 796 806 816 826 836 840 846 856 860 866 876 886 890 896 906 916 926 936 940 946 956 960 966 976 986 990 996",
         "expression" : "n==0||n%10==6||n%100==40||n%100==60||n%100==90",
         "typical" : 6
      },
      "is 0, 1" : {
         "examples" : "0 1",
         "expression" : "n==0||n==1",
         "typical" : 1
      },
      "is 0, 11-19 or ends in 01-10 excluding 1" : {
         "examples" : "0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 101 102 103 104 105 106 107 108 109 110 201 202 203 204 205 206 207 208 209 210 301 302 303 304 305 306 307 308 309 310 401 402 403 404 405 406 407 408 409 410 501 502 503 504 505 506 507 508 509 510 601 602 603 604 605 606 607 608 609 610 701 702 703 704 705 706 707 708 709 710 801 802 803 804 805 806 807 808 809 810 901 902 903 904 905 906 907 908 909 910",
         "expression" : "n==0||(11\u003C=n&&n\u003C=19)||(1\u003C=n%100&&n%100\u003C=10&&n!=1)",
         "typical" : "2"
      },
      "is 0, 3-10" : {
         "examples" : "0 3 4 5 6 7 8 9 10",
         "expression" : "n==0||(3\u003C=n&&n\u003C=10)",
         "typical" : 3
      },
      "is 0, 7-9" : {
         "examples" : "0 7 8 9",
         "expression" : "n==0||(7\u003C=n&&n\u003C=9)",
         "typical" : 7
      },
      "is 0-1, 11-99" : {
         "examples" : "0 1 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99",
         "expression" : "(0\u003C=n&&n\u003C=1)||(11\u003C=n&&n\u003C=99)",
         "typical" : "1"
      },
      "is 1" : {
         "examples" : "1",
         "expression" : "n==1",
         "typical" : 1
      },
      "is 1, 11" : {
         "examples" : "1 11",
         "expression" : "n==1||n==11",
         "typical" : 1
      },
      "is 1, 3" : {
         "examples" : "1 3",
         "expression" : "n==1||n==3",
         "typical" : 1
      },
      "is 1, 5" : {
         "examples" : "1 5",
         "expression" : "n==1||n==5",
         "typical" : "1"
      },
      "is 1, 5, 7-10" : {
         "examples" : "1 5 7 8 9 10",
         "expression" : "n==1||n==5||(7\u003C=n&&n\u003C=10)",
         "typical" : 1
      },
      "is 1, 5, 7-9" : {
         "examples" : "1 5 7 8 9",
         "expression" : "n==1||n==5||(7\u003C=n&&n\u003C=9)",
         "typical" : 1
      },
      "is 1-4" : {
         "examples" : "1 2 3 4",
         "expression" : "1\u003C=n&&n\u003C=4",
         "typical" : "1"
      },
      "is 1-9" : {
         "examples" : "1 2 3 4 5 6 7 8 9",
         "expression" : "1\u003C=n&&n\u003C=9",
         "typical" : "1"
      },
      "is 10 or ends in 6, 9" : {
         "examples" : "6 9 10 16 19 26 29 36 39 46 49 56 59 66 69 76 79 86 89 96 99 106 109 116 119 126 129 136 139 146 149 156 159 166 169 176 179 186 189 196 199 206 209 216 219 226 229 236 239 246 249 256 259 266 269 276 279 286 289 296 299 306 309 316 319 326 329 336 339 346 349 356 359 366 369 376 379 386 389 396 399 406 409 416 419 426 429 436 439 446 449 456 459 466 469 476 479 486 489 496 499 506 509 516 519 526 529 536 539 546 549 556 559 566 569 576 579 586 589 596 599 606 609 616 619 626 629 636 639 646 649 656 659 666 669 676 679 686 689 696 699 706 709 716 719 726 729 736 739 746 749 756 759 766 769 776 779 786 789 796 799 806 809 816 819 826 829 836 839 846 849 856 859 866 869 876 879 886 889 896 899 906 909 916 919 926 929 936 939 946 949 956 959 966 969 976 979 986 989 996 999",
         "expression" : "n==10||n%10==6||n%10==9",
         "typical" : "6"
      },
      "is 2" : {
         "examples" : "2",
         "expression" : "n==2",
         "typical" : 2
      },
      "is 2, 12" : {
         "examples" : "2 12",
         "expression" : "n==2||n==12",
         "typical" : 2
      },
      "is 2, 3" : {
         "examples" : "2 3",
         "expression" : "n==2||n==3",
         "typical" : 2
      },
      "is 2-10" : {
         "examples" : "2 3 4 5 6 7 8 9 10",
         "expression" : "2\u003C=n&&n\u003C=10",
         "typical" : 2
      },
      "is 2-4" : {
         "examples" : "2 3 4",
         "expression" : "2\u003C=n&&n\u003C=4",
         "typical" : 2
      },
      "is 3" : {
         "examples" : "3",
         "expression" : "n==3",
         "typical" : 3
      },
      "is 3, 4" : {
         "examples" : "3 4",
         "expression" : "n==3||n==4",
         "typical" : 3
      },
      "is 3-10, 13-19" : {
         "examples" : "3 4 5 6 7 8 9 10 13 14 15 16 17 18 19",
         "expression" : "(3\u003C=n&&n\u003C=10)||(13\u003C=n&&n\u003C=19)",
         "typical" : 3
      },
      "is 3-6" : {
         "examples" : "3 4 5 6",
         "expression" : "3\u003C=n&&n\u003C=6",
         "typical" : 3
      },
      "is 4" : {
         "examples" : "4",
         "expression" : "n==4",
         "typical" : 4
      },
      "is 5, 6" : {
         "examples" : "5 6",
         "expression" : "n==5||n==6",
         "typical" : 5
      },
      "is 6" : {
         "examples" : "6",
         "expression" : "n==6",
         "typical" : 6
      },
      "is 7-10" : {
         "examples" : "7 8 9 10",
         "expression" : "7\u003C=n&&n\u003C=10",
         "typical" : 7
      },
      "is 8, 11" : {
         "examples" : "8 11",
         "expression" : "n==8||n==11",
         "typical" : 8
      },
      "is 8, 11, 80, 800" : {
         "examples" : "8 11 80 800",
         "expression" : "n==8||n==11||n==80||n==800",
         "typical" : "8"
      },
      "never" : {
         "examples" : "",
         "expression" : "1==0",
         "typical" : null
      }
   },
   "rules" : {
      "1:everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "bm" : 1,
               "bo" : 1,
               "dz" : 1,
               "id" : 1,
               "ig" : 1,
               "ii" : 1,
               "in" : 1,
               "ja" : 1,
               "jbo" : 1,
               "jv" : 1,
               "jw" : 1,
               "kde" : 1,
               "kea" : 1,
               "km" : 1,
               "ko" : 1,
               "lkt" : 1,
               "lo" : 1,
               "ms" : 1,
               "my" : 1,
               "nqo" : 1,
               "root" : 1,
               "sah" : 1,
               "ses" : 1,
               "sg" : 1,
               "th" : 1,
               "to" : 1,
               "vi" : 1,
               "wo" : 1,
               "yo" : 1,
               "yue" : 1,
               "zh" : 1
            },
            "ordinal" : {
               "af" : 1,
               "am" : 1,
               "ar" : 1,
               "bg" : 1,
               "bs" : 1,
               "ce" : 1,
               "cs" : 1,
               "da" : 1,
               "de" : 1,
               "dsb" : 1,
               "el" : 1,
               "es" : 1,
               "et" : 1,
               "eu" : 1,
               "fa" : 1,
               "fi" : 1,
               "fy" : 1,
               "gl" : 1,
               "gsw" : 1,
               "he" : 1,
               "hr" : 1,
               "hsb" : 1,
               "id" : 1,
               "in" : 1,
               "is" : 1,
               "iw" : 1,
               "ja" : 1,
               "km" : 1,
               "kn" : 1,
               "ko" : 1,
               "ky" : 1,
               "lt" : 1,
               "lv" : 1,
               "ml" : 1,
               "mn" : 1,
               "my" : 1,
               "nb" : 1,
               "nl" : 1,
               "pa" : 1,
               "pl" : 1,
               "prg" : 1,
               "ps" : 1,
               "pt" : 1,
               "root" : 1,
               "ru" : 1,
               "sd" : 1,
               "sh" : 1,
               "si" : 1,
               "sk" : 1,
               "sl" : 1,
               "sr" : 1,
               "sw" : 1,
               "ta" : 1,
               "te" : 1,
               "th" : 1,
               "tr" : 1,
               "ur" : 1,
               "uz" : 1,
               "yue" : 1,
               "zh" : 1,
               "zu" : 1
            }
         },
         "expression" : "0",
         "forms" : [
            "everything else"
         ],
         "serializations" : {
            "1:everything else" : {
               "expressions" : {
                  "0" : 1
               },
               "fields" : "0",
               "mozilla_rule" : 0
            },
            "2:everything else/never" : {
               "expressions" : {
                  "0" : 1
               },
               "fields" : "0/-"
            },
            "2:never/everything else" : {
               "expressions" : {
                  "1" : 1
               },
               "fields" : "-/0"
            }
         }
      },
      "2:ends in 0, 6, 9 excluding 0/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "kk" : 1
            }
         },
         "expression" : "(n%10==0||n%10==6||n%10==9)&&n!=0?0:1",
         "forms" : [
            "ends in 0, 6, 9 excluding 0",
            "everything else"
         ],
         "serializations" : {
            "2:ends in 0, 6, 9 excluding 0/everything else" : {
               "expressions" : {
                  "(n%10==0||n%10==6||n%10==9)&&n!=0?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:ends in 1 not ends in 11/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "is" : 1,
               "mk" : 1
            }
         },
         "expression" : "n%10==1&&n%100!=11?0:1",
         "forms" : [
            "ends in 1 not ends in 11",
            "everything else"
         ],
         "serializations" : {
            "2:ends in 1 not ends in 11/everything else" : {
               "expressions" : {
                  "(n%10!=1||n%100==11)" : 1,
                  "n%10==1&&n%100!=11?0:1" : 1
               },
               "fields" : "0/1",
               "mozilla_rule" : 15
            },
            "3:ends in 1 not ends in 11/everything else/never" : {
               "expressions" : {
                  "n%10==1&&n%100!=11?0:1" : 1
               },
               "fields" : "0/1/-"
            }
         }
      },
      "2:ends in 1-2 not ends in 11-12/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "sv" : 1
            }
         },
         "expression" : "(1\u003C=n%10&&n%10\u003C=2)&&!(11\u003C=n%100&&n%100\u003C=12)?0:1",
         "forms" : [
            "ends in 1-2 not ends in 11-12",
            "everything else"
         ],
         "serializations" : {
            "2:ends in 1-2 not ends in 11-12/everything else" : {
               "expressions" : {
                  "(1\u003C=n%10&&n%10\u003C=2)&&!(11\u003C=n%100&&n%100\u003C=12)?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:ends in 1/everything else" : {
         "expression" : "n%10==1?0:1",
         "forms" : [
            "ends in 1",
            "everything else"
         ],
         "serializations" : {
            "2:ends in 1/everything else" : {
               "expressions" : {
                  "n%10==1?0:1" : 1,
                  "n==1||n%10==1?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:ends in 2-3 not ends in 12-13/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "be" : 1
            }
         },
         "expression" : "(2\u003C=n%10&&n%10\u003C=3)&&!(12\u003C=n%100&&n%100\u003C=13)?0:1",
         "forms" : [
            "ends in 2-3 not ends in 12-13",
            "everything else"
         ],
         "serializations" : {
            "2:ends in 2-3 not ends in 12-13/everything else" : {
               "expressions" : {
                  "(2\u003C=n%10&&n%10\u003C=3)&&!(12\u003C=n%100&&n%100\u003C=13)?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:ends in 3 not ends in 13/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "uk" : 1
            }
         },
         "expression" : "n%10==3&&n%100!=13?0:1",
         "forms" : [
            "ends in 3 not ends in 13",
            "everything else"
         ],
         "serializations" : {
            "2:ends in 3 not ends in 13/everything else" : {
               "expressions" : {
                  "n%10==3&&n%100!=13?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:ends in 4, 6, 9/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "fil" : 1,
               "tl" : 1
            }
         },
         "expression" : "n%10==4||n%10==6||n%10==9?0:1",
         "forms" : [
            "ends in 4, 6, 9",
            "everything else"
         ],
         "serializations" : {
            "2:ends in 4, 6, 9/everything else" : {
               "expressions" : {
                  "n%10==4||n%10==6||n%10==9?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:is 0, 1/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "ak" : 1,
               "am" : 1,
               "as" : 1,
               "bh" : 1,
               "bn" : 1,
               "fa" : 1,
               "ff" : 1,
               "fr" : 1,
               "gu" : 1,
               "guw" : 1,
               "hi" : 1,
               "hy" : 1,
               "kab" : 1,
               "kn" : 1,
               "ln" : 1,
               "mg" : 1,
               "mr" : 1,
               "nso" : 1,
               "pa" : 1,
               "pt" : 1,
               "si" : 1,
               "ti" : 1,
               "wa" : 1,
               "zu" : 1
            }
         },
         "expression" : "n==0||n==1?0:1",
         "forms" : [
            "is 0, 1",
            "everything else"
         ],
         "serializations" : {
            "2:is 0, 1/everything else" : {
               "expressions" : {
                  "(n>1)" : 1,
                  "(n>=2)" : 1,
                  "n\u003C2?0:1" : 1,
                  "n==0||n==1?0:1" : 1,
                  "n>1" : 1,
                  "n>1?1:0" : 1
               },
               "fields" : "0/1",
               "mozilla_rule" : 2
            }
         }
      },
      "2:is 0-1, 11-99/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "tzm" : 1
            }
         },
         "expression" : "(0\u003C=n&&n\u003C=1)||(11\u003C=n&&n\u003C=99)?0:1",
         "forms" : [
            "is 0-1, 11-99",
            "everything else"
         ],
         "serializations" : {
            "2:is 0-1, 11-99/everything else" : {
               "expressions" : {
                  "(0\u003C=n&&n\u003C=1)||(11\u003C=n&&n\u003C=99)?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:is 0/everything else" : {
         "expression" : "n==0?0:1",
         "forms" : [
            "is 0",
            "everything else"
         ],
         "serializations" : {
            "2:is 0/everything else" : {
               "expressions" : {
                  "(n!=0)" : 1,
                  "n==0?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:is 1, 5/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "hu" : 1
            }
         },
         "expression" : "n==1||n==5?0:1",
         "forms" : [
            "is 1, 5",
            "everything else"
         ],
         "serializations" : {
            "2:is 1, 5/everything else" : {
               "expressions" : {
                  "n==1||n==5?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:is 1-4/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "ne" : 1
            }
         },
         "expression" : "1\u003C=n&&n\u003C=4?0:1",
         "forms" : [
            "is 1-4",
            "everything else"
         ],
         "serializations" : {
            "2:is 1-4/everything else" : {
               "expressions" : {
                  "1\u003C=n&&n\u003C=4?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:is 1-9/everything else" : {
         "expression" : "1\u003C=n&&n\u003C=9?0:1",
         "forms" : [
            "is 1-9",
            "everything else"
         ],
         "serializations" : {
            "2:is 1-9/everything else" : {
               "expressions" : {
                  "1\u003C=n&&n\u003C=9?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:is 1/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "af" : 1,
               "asa" : 1,
               "ast" : 1,
               "az" : 1,
               "bem" : 1,
               "bez" : 1,
               "bg" : 1,
               "brx" : 1,
               "ca" : 1,
               "ce" : 1,
               "cgg" : 1,
               "chr" : 1,
               "ckb" : 1,
               "da" : 1,
               "de" : 1,
               "dv" : 1,
               "ee" : 1,
               "el" : 1,
               "en" : 1,
               "eo" : 1,
               "es" : 1,
               "et" : 1,
               "eu" : 1,
               "fi" : 1,
               "fo" : 1,
               "fur" : 1,
               "fy" : 1,
               "gl" : 1,
               "gsw" : 1,
               "ha" : 1,
               "haw" : 1,
               "hu" : 1,
               "io" : 1,
               "it" : 1,
               "jgo" : 1,
               "ji" : 1,
               "jmc" : 1,
               "ka" : 1,
               "kaj" : 1,
               "kcg" : 1,
               "kk" : 1,
               "kkj" : 1,
               "kl" : 1,
               "ks" : 1,
               "ksb" : 1,
               "ku" : 1,
               "ky" : 1,
               "lb" : 1,
               "lg" : 1,
               "mas" : 1,
               "mgo" : 1,
               "ml" : 1,
               "mn" : 1,
               "nah" : 1,
               "nb" : 1,
               "nd" : 1,
               "ne" : 1,
               "nl" : 1,
               "nn" : 1,
               "nnh" : 1,
               "no" : 1,
               "nr" : 1,
               "ny" : 1,
               "nyn" : 1,
               "om" : 1,
               "or" : 1,
               "os" : 1,
               "pap" : 1,
               "ps" : 1,
               "pt_PT" : 1,
               "rm" : 1,
               "rof" : 1,
               "rwk" : 1,
               "saq" : 1,
               "scn" : 1,
               "sd" : 1,
               "sdh" : 1,
               "seh" : 1,
               "sn" : 1,
               "so" : 1,
               "sq" : 1,
               "ss" : 1,
               "ssy" : 1,
               "st" : 1,
               "sv" : 1,
               "sw" : 1,
               "syr" : 1,
               "ta" : 1,
               "te" : 1,
               "teo" : 1,
               "tig" : 1,
               "tk" : 1,
               "tn" : 1,
               "tr" : 1,
               "ts" : 1,
               "ug" : 1,
               "ur" : 1,
               "uz" : 1,
               "ve" : 1,
               "vo" : 1,
               "vun" : 1,
               "wae" : 1,
               "xh" : 1,
               "xog" : 1,
               "yi" : 1
            },
            "ordinal" : {
               "fil" : 1,
               "fr" : 1,
               "ga" : 1,
               "hy" : 1,
               "lo" : 1,
               "mo" : 1,
               "ms" : 1,
               "ro" : 1,
               "tl" : 1,
               "vi" : 1
            }
         },
         "expression" : "n==1?0:1",
         "forms" : [
            "is 1",
            "everything else"
         ],
         "serializations" : {
            "2:everything else/is 1" : {
               "expressions" : {
                  "(n==1)" : 1
               },
               "fields" : "1/0"
            },
            "2:is 1/everything else" : {
               "expressions" : {
                  "(n!=1)" : 1,
                  "(n==1?0:1)" : 1,
                  "n!=1" : 1,
                  "n!=1?1:0" : 1,
                  "n==1?0:1" : 1
               },
               "fields" : "0/1",
               "mozilla_rule" : 1
            }
         }
      },
      "2:is 10 or ends in 6, 9/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "tk" : 1
            }
         },
         "expression" : "n==10||n%10==6||n%10==9?0:1",
         "forms" : [
            "is 10 or ends in 6, 9",
            "everything else"
         ],
         "serializations" : {
            "2:is 10 or ends in 6, 9/everything else" : {
               "expressions" : {
                  "n==10||n%10==6||n%10==9?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "2:is 8, 11, 80, 800/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "it" : 1,
               "scn" : 1
            }
         },
         "expression" : "n==8||n==11||n==80||n==800?0:1",
         "forms" : [
            "is 8, 11, 80, 800",
            "everything else"
         ],
         "serializations" : {
            "2:is 8, 11, 80, 800/everything else" : {
               "expressions" : {
                  "n==8||n==11||n==80||n==800?0:1" : 1
               },
               "fields" : "0/1"
            }
         }
      },
      "3:ends in 1 not ends in 11/ends in 0 or ends in 11-19/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "lt" : 1,
               "lv" : 1,
               "prg" : 1
            }
         },
         "expression" : "n%10==1&&n%100!=11?0:n%10==0||(11\u003C=n%100&&n%100\u003C=19)?1:2",
         "forms" : [
            "ends in 1 not ends in 11",
            "ends in 0 or ends in 11-19",
            "everything else"
         ],
         "serializations" : {
            "3:ends in 1 not ends in 11/ends in 0 or ends in 11-19/everything else" : {
               "expressions" : {
                  "n%10==1&&n%100!=11?0:n%10==0||(11\u003C=n%100&&n%100\u003C=19)?1:2" : 1,
                  "n%10==1&&n%100!=11?0:n%10>=2&&(n%100\u003C10||n%100>=20)?2:1" : 1
               },
               "fields" : "0/1/2",
               "mozilla_rule" : 6
            },
            "3:ends in 1 not ends in 11/everything else/ends in 0 or ends in 11-19" : {
               "expressions" : {
                  "(n%10==1&&n%100!=11?0:n%10>=2&&(n%100\u003C10||n%100>=20)?1:2)" : 1,
                  "n%10==1&&n%100!=11?0:n%10>=2&&(n%100\u003C10||n%100>=20)?1:2" : 1
               },
               "fields" : "0/2/1"
            }
         }
      },
      "3:ends in 1 not ends in 11/ends in 2-4 not ends in 12-14/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "be" : 1,
               "bs" : 1,
               "hr" : 1,
               "ru" : 1,
               "sh" : 1,
               "sr" : 1,
               "uk" : 1
            }
         },
         "expression" : "n%10==1&&n%100!=11?0:(2\u003C=n%10&&n%10\u003C=4)&&!(12\u003C=n%100&&n%100\u003C=14)?1:2",
         "forms" : [
            "ends in 1 not ends in 11",
            "ends in 2-4 not ends in 12-14",
            "everything else"
         ],
         "serializations" : {
            "3:ends in 1 not ends in 11/ends in 2-4 not ends in 12-14/everything else" : {
               "expressions" : {
                  "(n%10==1&&n%100!=11?0:n%10>=2&&n%10\u003C=4&&(n%100\u003C10||n%100>=20)?1:2)" : 1,
                  "n%10==1&&n%100!=11?0:(2\u003C=n%10&&n%10\u003C=4)&&!(12\u003C=n%100&&n%100\u003C=14)?1:2" : 1,
                  "n%10==1&&n%100!=11?0:n%10>=2&&n%10\u003C=4&&(n%100\u003C10||n%100>=20)?1:2" : 1
               },
               "fields" : "0/1/2",
               "mozilla_rule" : 7
            }
         }
      },
      "3:ends in 1/ends in 0 or ends in 12-19/everything else" : {
         "expression" : "n%10==1?0:n%10==0||(12\u003C=n%100&&n%100\u003C=19)?1:2",
         "forms" : [
            "ends in 1",
            "ends in 0 or ends in 12-19",
            "everything else"
         ],
         "serializations" : {
            "3:ends in 1/ends in 0 or ends in 12-19/everything else" : {
               "expressions" : {
                  "n%10==1?0:n%10==0||(12\u003C=n%100&&n%100\u003C=19)?1:2" : 1
               },
               "fields" : "0/1/2"
            },
            "4:ends in 1/never/everything else/ends in 0 or ends in 12-19" : {
               "expressions" : {
                  "(n%10==1?0:n%10==1&&n%100!=11?1:n%10>=2&&(n%100\u003C10||n%100>=20)?2:3)" : 1
               },
               "fields" : "0/-/2/1"
            }
         }
      },
      "3:ends in 1/ends in 2-4/everything else" : {
         "expression" : "n%10==1?0:2\u003C=n%10&&n%10\u003C=4?1:2",
         "forms" : [
            "ends in 1",
            "ends in 2-4",
            "everything else"
         ],
         "serializations" : {
            "3:ends in 1/ends in 2-4/everything else" : {
               "expressions" : {
                  "n%100/10==1?2:n%10==1?0:(n\u002B9)%10>3?2:1" : 1,
                  "n%10==1?0:2\u003C=n%10&&n%10\u003C=4?1:2" : 1
               },
               "fields" : "0/1/2"
            }
         }
      },
      "3:ends in 1/ends in 2/everything else" : {
         "expression" : "n%10==1?0:n%10==2?1:2",
         "forms" : [
            "ends in 1",
            "ends in 2",
            "everything else"
         ],
         "serializations" : {
            "3:ends in 1/ends in 2/everything else" : {
               "expressions" : {
                  "n%10==1?0:n%10==2?1:2" : 1
               },
               "fields" : "0/1/2",
               "mozilla_rule" : 14
            }
         }
      },
      "3:is 0, 1/is 2-10/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "shi" : 1
            }
         },
         "expression" : "n==0||n==1?0:2\u003C=n&&n\u003C=10?1:2",
         "forms" : [
            "is 0, 1",
            "is 2-10",
            "everything else"
         ],
         "serializations" : {
            "3:is 0, 1/is 2-10/everything else" : {
               "expressions" : {
                  "n==0||n==1?0:2\u003C=n&&n\u003C=10?1:2" : 1
               },
               "fields" : "0/1/2"
            }
         }
      },
      "3:is 0/ends in 1 not ends in 11/everything else" : {
         "expression" : "n==0?0:n%10==1&&n%100!=11?1:2",
         "forms" : [
            "is 0",
            "ends in 1 not ends in 11",
            "everything else"
         ],
         "serializations" : {
            "3:ends in 1 not ends in 11/everything else/is 0" : {
               "expressions" : {
                  "(n%10==1&&n%100!=11?0:n!=0?1:2)" : 1
               },
               "fields" : "1/2/0"
            },
            "3:is 0/ends in 1 not ends in 11/everything else" : {
               "expressions" : {
                  "n%10==1&&n%100!=11?1:n!=0?2:0" : 1,
                  "n==0?0:n%10==1&&n%100!=11?1:2" : 1
               },
               "fields" : "0/1/2",
               "mozilla_rule" : 3
            }
         }
      },
      "3:is 0/is 1/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "ksh" : 1,
               "lag" : 1
            }
         },
         "expression" : "n==0?0:n==1?1:2",
         "forms" : [
            "is 0",
            "is 1",
            "everything else"
         ],
         "serializations" : {
            "3:is 0/is 1/everything else" : {
               "expressions" : {
                  "(n==0?0:n==1?1:2)" : 1,
                  "n==0?0:n==1?1:2" : 1
               },
               "fields" : "0/1/2"
            }
         }
      },
      "3:is 1/ends in 2-4 not ends in 12-14/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "pl" : 1
            }
         },
         "expression" : "n==1?0:(2\u003C=n%10&&n%10\u003C=4)&&!(12\u003C=n%100&&n%100\u003C=14)?1:2",
         "forms" : [
            "is 1",
            "ends in 2-4 not ends in 12-14",
            "everything else"
         ],
         "serializations" : {
            "3:is 1/ends in 2-4 not ends in 12-14/everything else" : {
               "expressions" : {
                  "((n==1)?0:((n%10>=2&&n%10\u003C=4&&(n%100\u003C10||n%100>=20))?1:2))" : 1,
                  "(n==1)?0:n%10>=2&&n%10\u003C=4&&(n%100\u003C10||n%100>=20)?1:2" : 1,
                  "(n==1?0:n%10>=2&&n%10\u003C=4&&(n%100\u003C10||n%100>=20)?1:2)" : 1,
                  "n==1?0:(2\u003C=n%10&&n%10\u003C=4)&&!(12\u003C=n%100&&n%100\u003C=14)?1:2" : 1,
                  "n==1?0:n%10>=2&&n%10\u003C=4&&(n%100\u003C10||n%100>=20)?1:2" : 1
               },
               "fields" : "0/1/2",
               "mozilla_rule" : 9
            }
         }
      },
      "3:is 1/ends in 4 not ends in 14/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "sq" : 1
            }
         },
         "expression" : "n==1?0:n%10==4&&n%100!=14?1:2",
         "forms" : [
            "is 1",
            "ends in 4 not ends in 14",
            "everything else"
         ],
         "serializations" : {
            "3:is 1/ends in 4 not ends in 14/everything else" : {
               "expressions" : {
                  "n==1?0:n%10==4&&n%100!=14?1:2" : 1
               },
               "fields" : "0/1/2"
            }
         }
      },
      "3:is 1/is 0 or ends in 01-19 excluding 1/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "mo" : 1,
               "ro" : 1
            }
         },
         "expression" : "n==1?0:n==0||(1\u003C=n%100&&n%100\u003C=19&&n!=1)?1:2",
         "forms" : [
            "is 1",
            "is 0 or ends in 01-19 excluding 1",
            "everything else"
         ],
         "serializations" : {
            "3:is 1/is 0 or ends in 01-19 excluding 1/everything else" : {
               "expressions" : {
                  "(n==1?0:(((n%100>19)||((n%100==0)&&(n!=0)))?2:1))" : 1,
                  "(n==1?0:(n==0||((n%100)>0&&(n%100)\u003C20))?1:2)" : 1,
                  "(n==1?0:(n==0||(n%100>0&&n%100\u003C20))?1:2)" : 1,
                  "n==1?0:(n==0||(n%100>0&&n%100\u003C20))?1:2" : 1,
                  "n==1?0:n==0||(1\u003C=n%100&&n%100\u003C=19&&n!=1)?1:2" : 1,
                  "n==1?0:n==0||n%100>0&&n%100\u003C20?1:2" : 1
               },
               "fields" : "0/1/2",
               "mozilla_rule" : 5
            }
         }
      },
      "3:is 1/is 0 or ends in 02-20, 40, 60, 80/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "ka" : 1
            }
         },
         "expression" : "n==1?0:n==0||2\u003C=n%100&&n%100\u003C=20||n%100==40||n%100==60||n%100==80?1:2",
         "forms" : [
            "is 1",
            "is 0 or ends in 02-20, 40, 60, 80",
            "everything else"
         ],
         "serializations" : {
            "3:is 1/is 0 or ends in 02-20, 40, 60, 80/everything else" : {
               "expressions" : {
                  "n==1?0:n==0||2\u003C=n%100&&n%100\u003C=20||n%100==40||n%100==60||n%100==80?1:2" : 1
               },
               "fields" : "0/1/2"
            }
         }
      },
      "3:is 1/is 2-4/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "cs" : 1,
               "sk" : 1
            }
         },
         "expression" : "n==1?0:2\u003C=n&&n\u003C=4?1:2",
         "forms" : [
            "is 1",
            "is 2-4",
            "everything else"
         ],
         "serializations" : {
            "3:everything else/is 1/is 2-4" : {
               "expressions" : {
                  "(n==1)?1:(n>=2&&n\u003C=4)?2:0" : 1
               },
               "fields" : "2/0/1"
            },
            "3:is 1/is 2-4/everything else" : {
               "expressions" : {
                  "((n==1)?0:(n>=2&&n\u003C=4)?1:2)" : 1,
                  "(n==1)?0:(n>=2&&n\u003C=4)?1:2" : 1,
                  "n==1?0:2\u003C=n&&n\u003C=4?1:2" : 1,
                  "n==1?0:n>=2&&n\u003C=4?1:2" : 1
               },
               "fields" : "0/1/2",
               "mozilla_rule" : 8
            }
         }
      },
      "3:is 1/is 2/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "iu" : 1,
               "kw" : 1,
               "naq" : 1,
               "se" : 1,
               "sma" : 1,
               "smi" : 1,
               "smj" : 1,
               "smn" : 1,
               "sms" : 1
            }
         },
         "expression" : "n==1?0:n==2?1:2",
         "forms" : [
            "is 1",
            "is 2",
            "everything else"
         ],
         "serializations" : {
            "3:is 1/is 2/everything else" : {
               "expressions" : {
                  "n==1?0:n==2?1:2" : 1
               },
               "fields" : "0/1/2"
            }
         }
      },
      "4:ends in 01/ends in 02/ends in 03-04/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "dsb" : 1,
               "hsb" : 1,
               "sl" : 1
            }
         },
         "expression" : "n%100==1?0:n%100==2?1:3\u003C=n%100&&n%100\u003C=4?2:3",
         "forms" : [
            "ends in 01",
            "ends in 02",
            "ends in 03-04",
            "everything else"
         ],
         "serializations" : {
            "4:ends in 01/ends in 02/ends in 03-04/everything else" : {
               "expressions" : {
                  "(n%100==1?0:n%100==2?1:n%100==3||n%100==4?2:3)" : 1,
                  "n%100==1?0:n%100==2?1:3\u003C=n%100&&n%100\u003C=4?2:3" : 1,
                  "n%100==1?0:n%100==2?1:n%100==3||n%100==4?2:3" : 1
               },
               "fields" : "0/1/2/3",
               "mozilla_rule" : 10
            },
            "4:everything else/ends in 01/ends in 02/ends in 03-04" : {
               "expressions" : {
                  "(n%100==1?1:n%100==2?2:n%100==3||n%100==4?3:0)" : 1
               },
               "fields" : "3/0/1/2"
            }
         }
      },
      "4:ends in 1 not ends in 11/ends in 2 not ends in 12/ends in 3 not ends in 13/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "en" : 1
            }
         },
         "expression" : "n%10==1&&n%100!=11?0:n%10==2&&n%100!=12?1:n%10==3&&n%100!=13?2:3",
         "forms" : [
            "ends in 1 not ends in 11",
            "ends in 2 not ends in 12",
            "ends in 3 not ends in 13",
            "everything else"
         ],
         "serializations" : {
            "4:ends in 1 not ends in 11/ends in 2 not ends in 12/ends in 3 not ends in 13/everything else" : {
               "expressions" : {
                  "n%10==1&&n%100!=11?0:n%10==2&&n%100!=12?1:n%10==3&&n%100!=13?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:ends in 1 not ends in 11/ends in 2 not ends in 12/ends in 7-8 not ends in 17-18/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "mk" : 1
            }
         },
         "expression" : "n%10==1&&n%100!=11?0:n%10==2&&n%100!=12?1:(7\u003C=n%10&&n%10\u003C=8)&&!(17\u003C=n%100&&n%100\u003C=18)?2:3",
         "forms" : [
            "ends in 1 not ends in 11",
            "ends in 2 not ends in 12",
            "ends in 7-8 not ends in 17-18",
            "everything else"
         ],
         "serializations" : {
            "4:ends in 1 not ends in 11/ends in 2 not ends in 12/ends in 7-8 not ends in 17-18/everything else" : {
               "expressions" : {
                  "n%10==1&&n%100!=11?0:n%10==2&&n%100!=12?1:(7\u003C=n%10&&n%10\u003C=8)&&!(17\u003C=n%100&&n%100\u003C=18)?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:ends in 1, 2, 5, 7, 8 or ends in 20, 50, 70, 80/ends in 3-4 or ends in 00 not ends in 000/is 0 or ends in 6 or ends in 40, 60, 90/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "az" : 1
            }
         },
         "expression" : "n%10==1||n%10==2||n%10==5||n%10==7||n%10==8||n%100==20||n%100==50||n%100==70||n%100==80?0:n%10==3||n%10==4||n%100==0&&n%1000!=0?1:n==0||n%10==6||n%100==40||n%100==60||n%100==90?2:3",
         "forms" : [
            "ends in 1, 2, 5, 7, 8 or ends in 20, 50, 70, 80",
            "ends in 3-4 or ends in 00 not ends in 000",
            "is 0 or ends in 6 or ends in 40, 60, 90",
            "everything else"
         ],
         "serializations" : {
            "4:ends in 1, 2, 5, 7, 8 or ends in 20, 50, 70, 80/ends in 3-4 or ends in 00 not ends in 000/is 0 or ends in 6 or ends in 40, 60, 90/everything else" : {
               "expressions" : {
                  "n%10==1||n%10==2||n%10==5||n%10==7||n%10==8||n%100==20||n%100==50||n%100==70||n%100==80?0:n%10==3||n%10==4||n%100==0&&n%1000!=0?1:n==0||n%10==6||n%100==40||n%100==60||n%100==90?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:ends in 1/ends in 2/ends in 00, 20, 40, 60, 80/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "gv" : 1
            }
         },
         "expression" : "n%10==1?0:n%10==2?1:n%100==0||n%100==20||n%100==40||n%100==60||n%100==80?2:3",
         "forms" : [
            "ends in 1",
            "ends in 2",
            "ends in 00, 20, 40, 60, 80",
            "everything else"
         ],
         "serializations" : {
            "4:ends in 1/ends in 2/ends in 00, 20, 40, 60, 80/everything else" : {
               "expressions" : {
                  "n%10==1?0:n%10==2?1:n%100==0||n%100==20||n%100==40||n%100==60||n%100==80?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:is 1, 11/is 2, 12/is 3-10, 13-19/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "gd" : 1
            }
         },
         "expression" : "n==1||n==11?0:n==2||n==12?1:(3\u003C=n&&n\u003C=10)||(13\u003C=n&&n\u003C=19)?2:3",
         "forms" : [
            "is 1, 11",
            "is 2, 12",
            "is 3-10, 13-19",
            "everything else"
         ],
         "serializations" : {
            "4:is 1, 11/is 2, 12/is 3-10, 13-19/everything else" : {
               "expressions" : {
                  "(n==1||n==11)?0:(n==2||n==12)?1:(n>2&&n\u003C20)?2:3" : 1,
                  "n==1||n==11?0:n==2||n==12?1:(3\u003C=n&&n\u003C=10)||(13\u003C=n&&n\u003C=19)?2:3" : 1,
                  "n==1||n==11?0:n==2||n==12?1:n>0&&n\u003C20?2:3" : 1
               },
               "fields" : "0/1/2/3",
               "mozilla_rule" : 4
            }
         }
      },
      "4:is 1, 3/is 2/is 4/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "ca" : 1
            }
         },
         "expression" : "n==1||n==3?0:n==2?1:n==4?2:3",
         "forms" : [
            "is 1, 3",
            "is 2",
            "is 4",
            "everything else"
         ],
         "serializations" : {
            "4:is 1, 3/is 2/is 4/everything else" : {
               "expressions" : {
                  "n==1||n==3?0:n==2?1:n==4?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:is 1/ends in 2-4 not ends in 12-14/ends in 1 not ends in 11 excluding 1, 11/everything else" : {
         "expression" : "n==1?0:(2\u003C=n%10&&n%10\u003C=4)&&!(12\u003C=n%100&&n%100\u003C=14)?1:n%10==1&&n%100!=11&&n!=1&&n!=11?2:3",
         "forms" : [
            "is 1",
            "ends in 2-4 not ends in 12-14",
            "ends in 1 not ends in 11 excluding 1, 11",
            "everything else"
         ],
         "serializations" : {
            "4:ends in 1 not ends in 11 excluding 1, 11/ends in 2-4 not ends in 12-14/everything else/is 1" : {
               "expressions" : {
                  "(n==1?3:n%10==1&&n%100!=11?0:n%10>=2&&n%10\u003C=4&&(n%100\u003C10||n%100>=20)?1:2)" : 1,
                  "n==1?3:n%10==1&&n%100!=11?0:n%10>=2&&n%10\u003C=4&&(n%100\u003C10||n%100>=20)?1:2" : 1
               },
               "fields" : "2/1/3/0"
            },
            "4:is 1/ends in 2-4 not ends in 12-14/ends in 1 not ends in 11 excluding 1, 11/everything else" : {
               "expressions" : {
                  "n==1?0:(2\u003C=n%10&&n%10\u003C=4)&&!(12\u003C=n%100&&n%100\u003C=14)?1:n%10==1&&n%100!=11&&n!=1&&n!=11?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:is 1/is 0 or ends in 01-10 excluding 1/ends in 11-19/everything else" : {
         "expression" : "n==1?0:n==0||(1\u003C=n%100&&n%100\u003C=10&&n!=1)?1:11\u003C=n%100&&n%100\u003C=19?2:3",
         "forms" : [
            "is 1",
            "is 0 or ends in 01-10 excluding 1",
            "ends in 11-19",
            "everything else"
         ],
         "serializations" : {
            "4:is 1/is 0 or ends in 01-10 excluding 1/ends in 11-19/everything else" : {
               "expressions" : {
                  "n==1?0:n==0||(1\u003C=n%100&&n%100\u003C=10&&n!=1)?1:11\u003C=n%100&&n%100\u003C=19?2:3" : 1,
                  "n==1?0:n==0||n%100>0&&n%100\u003C=10?1:n%100>10&&n%100\u003C20?2:3" : 1
               },
               "fields" : "0/1/2/3",
               "mozilla_rule" : 13
            }
         }
      },
      "4:is 1/is 0 or ends in 02-10/ends in 11-19/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "mt" : 1
            }
         },
         "expression" : "n==1?0:n==0||(2\u003C=n%100&&n%100\u003C=10)?1:11\u003C=n%100&&n%100\u003C=19?2:3",
         "forms" : [
            "is 1",
            "is 0 or ends in 02-10",
            "ends in 11-19",
            "everything else"
         ],
         "serializations" : {
            "4:is 1/is 0 or ends in 02-10/ends in 11-19/everything else" : {
               "expressions" : {
                  "(n==1?0:n==0||(n%100>1&&n%100\u003C11)?1:(n%100>10&&n%100\u003C20)?2:3)" : 1,
                  "n==1?0:n==0||(2\u003C=n%100&&n%100\u003C=10)?1:11\u003C=n%100&&n%100\u003C=19?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:is 1/is 2, 3/is 4/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "mr" : 1
            }
         },
         "expression" : "n==1?0:n==2||n==3?1:n==4?2:3",
         "forms" : [
            "is 1",
            "is 2, 3",
            "is 4",
            "everything else"
         ],
         "serializations" : {
            "4:is 1/is 2, 3/is 4/everything else" : {
               "expressions" : {
                  "n==1?0:n==2||n==3?1:n==4?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:is 1/is 2/ends in 0 excluding 0, 10/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "he" : 1,
               "iw" : 1
            }
         },
         "expression" : "n==1?0:n==2?1:n%10==0&&n!=0&&n!=10?2:3",
         "forms" : [
            "is 1",
            "is 2",
            "ends in 0 excluding 0, 10",
            "everything else"
         ],
         "serializations" : {
            "4:is 1/is 2/ends in 0 excluding 0, 10/everything else" : {
               "expressions" : {
                  "n==1?0:n==2?1:n%10==0&&n!=0&&n!=10?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:is 1/is 2/is 0, 3-10/everything else" : {
         "expression" : "n==1?0:n==2?1:n==0||(3\u003C=n&&n\u003C=10)?2:3",
         "forms" : [
            "is 1",
            "is 2",
            "is 0, 3-10",
            "everything else"
         ],
         "serializations" : {
            "4:is 1/is 2/is 0, 3-10/everything else" : {
               "expressions" : {
                  "n==1?0:n==2?1:n\u003C=10?2:3" : 1,
                  "n==1?0:n==2?1:n==0||(3\u003C=n&&n\u003C=10)?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:is 1/is 2/is 3/everything else" : {
         "expression" : "n==1?0:n==2?1:n==3?2:3",
         "forms" : [
            "is 1",
            "is 2",
            "is 3",
            "everything else"
         ],
         "serializations" : {
            "4:is 1/is 2/is 3/everything else" : {
               "expressions" : {
                  "(n==1)?0:(n==2)?1:(n==3)?2:3" : 1,
                  "n==1?0:n==2?1:n==3?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "4:is 1/is 2/is 8, 11/everything else" : {
         "expression" : "n==1?0:n==2?1:n==8||n==11?2:3",
         "forms" : [
            "is 1",
            "is 2",
            "is 8, 11",
            "everything else"
         ],
         "serializations" : {
            "4:is 1/is 2/everything else/is 8, 11" : {
               "expressions" : {
                  "(n==1)?0:(n==2)?1:(n!=8&&n!=11)?2:3" : 1
               },
               "fields" : "0/1/3/2"
            },
            "4:is 1/is 2/is 8, 11/everything else" : {
               "expressions" : {
                  "n==1?0:n==2?1:n==8||n==11?2:3" : 1
               },
               "fields" : "0/1/2/3"
            }
         }
      },
      "5:ends in 1 not ends in 11, 71, 91/ends in 2 not ends in 12, 72, 92/ends in 3, 4, 9 not ends in 13, 14, 19, 73, 74, 79, 93, 94, 99/ends in 000000 excluding 0/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "br" : 1
            }
         },
         "expression" : "n%10==1&&n%100!=11&&n%100!=71&&n%100!=91?0:n%10==2&&n%100!=12&&n%100!=72&&n%100!=92?1:(n%10==3||n%10==4||n%10==9)&&n%100!=13&&n%100!=14&&n%100!=19&&n%100!=73&&n%100!=74&&n%100!=79&&n%100!=93&&n%100!=94&&n%100!=99?2:n%1000000==0&&n!=0?3:4",
         "forms" : [
            "ends in 1 not ends in 11, 71, 91",
            "ends in 2 not ends in 12, 72, 92",
            "ends in 3, 4, 9 not ends in 13, 14, 19, 73, 74, 79, 93, 94, 99",
            "ends in 000000 excluding 0",
            "everything else"
         ],
         "serializations" : {
            "5:ends in 1 not ends in 11, 71, 91/ends in 2 not ends in 12, 72, 92/ends in 3, 4, 9 not ends in 13, 14, 19, 73, 74, 79, 93, 94, 99/ends in 000000 excluding 0/everything else" : {
               "expressions" : {
                  "n%10==1&&n%100!=11&&n%100!=71&&n%100!=91?0:n%10==2&&n%100!=12&&n%100!=72&&n%100!=92?1:(n%10==3||n%10==4||n%10==9)&&n%100!=13&&n%100!=14&&n%100!=19&&n%100!=73&&n%100!=74&&n%100!=79&&n%100!=93&&n%100!=94&&n%100!=99?2:n%1000000==0&&n!=0?3:4" : 1
               },
               "fields" : "0/1/2/3/4",
               "mozilla_rule" : 16
            }
         }
      },
      "5:is 1, 5, 7-10/is 2, 3/is 4/is 6/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "as" : 1,
               "bn" : 1
            }
         },
         "expression" : "n==1||n==5||(7\u003C=n&&n\u003C=10)?0:n==2||n==3?1:n==4?2:n==6?3:4",
         "forms" : [
            "is 1, 5, 7-10",
            "is 2, 3",
            "is 4",
            "is 6",
            "everything else"
         ],
         "serializations" : {
            "5:is 1, 5, 7-10/is 2, 3/is 4/is 6/everything else" : {
               "expressions" : {
                  "n==1||n==5||(7\u003C=n&&n\u003C=10)?0:n==2||n==3?1:n==4?2:n==6?3:4" : 1
               },
               "fields" : "0/1/2/3/4"
            }
         }
      },
      "5:is 1, 5, 7-9/is 2, 3/is 4/is 6/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "or" : 1
            }
         },
         "expression" : "n==1||n==5||(7\u003C=n&&n\u003C=9)?0:n==2||n==3?1:n==4?2:n==6?3:4",
         "forms" : [
            "is 1, 5, 7-9",
            "is 2, 3",
            "is 4",
            "is 6",
            "everything else"
         ],
         "serializations" : {
            "5:is 1, 5, 7-9/is 2, 3/is 4/is 6/everything else" : {
               "expressions" : {
                  "n==1||n==5||(7\u003C=n&&n\u003C=9)?0:n==2||n==3?1:n==4?2:n==6?3:4" : 1
               },
               "fields" : "0/1/2/3/4"
            }
         }
      },
      "5:is 1/ends in 1-2 excluding 1/ends in 3-6/ends in 0 excluding 10/everything else" : {
         "expression" : "n==1?0:(1\u003C=n%10&&n%10\u003C=2)&&n!=1?1:3\u003C=n%10&&n%10\u003C=6?2:n%10==0&&n!=10?3:4",
         "forms" : [
            "is 1",
            "ends in 1-2 excluding 1",
            "ends in 3-6",
            "ends in 0 excluding 10",
            "everything else"
         ],
         "serializations" : {
            "5:is 1/ends in 1-2 excluding 1/ends in 3-6/ends in 0 excluding 10/everything else" : {
               "expressions" : {
                  "n==1?0:(1\u003C=n%10&&n%10\u003C=2)&&n!=1?1:3\u003C=n%10&&n%10\u003C=6?2:n%10==0&&n!=10?3:4" : 1
               },
               "fields" : "0/1/2/3/4"
            },
            "5:is 1/ends in 1-2 excluding 1/ends in 3-6/everything else/ends in 0 excluding 10" : {
               "expressions" : {
                  "n==1?0:(n%10==1||n%10==2)?1:(n%10>=3&&n%10\u003C=6)?2:((n%10>=7&&n%10\u003C=9)||n==10)?3:4" : 1
               },
               "fields" : "0/1/2/4/3"
            }
         }
      },
      "5:is 1/is 2, 3/is 4/is 6/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "gu" : 1,
               "hi" : 1
            }
         },
         "expression" : "n==1?0:n==2||n==3?1:n==4?2:n==6?3:4",
         "forms" : [
            "is 1",
            "is 2, 3",
            "is 4",
            "is 6",
            "everything else"
         ],
         "serializations" : {
            "5:is 1/is 2, 3/is 4/is 6/everything else" : {
               "expressions" : {
                  "n==1?0:n==2||n==3?1:n==4?2:n==6?3:4" : 1
               },
               "fields" : "0/1/2/3/4"
            }
         }
      },
      "5:is 1/is 2/is 3-6/is 7-10/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "ga" : 1
            }
         },
         "expression" : "n==1?0:n==2?1:3\u003C=n&&n\u003C=6?2:7\u003C=n&&n\u003C=10?3:4",
         "forms" : [
            "is 1",
            "is 2",
            "is 3-6",
            "is 7-10",
            "everything else"
         ],
         "serializations" : {
            "5:is 1/is 2/is 3-6/is 7-10/everything else" : {
               "expressions" : {
                  "n==1?0:n==2?1:(n>2&&n\u003C7)?2:(n>6&&n\u003C11)?3:4" : 1,
                  "n==1?0:n==2?1:3\u003C=n&&n\u003C=6?2:7\u003C=n&&n\u003C=10?3:4" : 1,
                  "n==1?0:n==2?1:n>=3&&n\u003C=6?2:n>=7&&n\u003C=10?3:4" : 1
               },
               "fields" : "0/1/2/3/4",
               "mozilla_rule" : 11
            }
         }
      },
      "6:is 0/is 1/is 2/ends in 03-10/ends in 00-02 excluding 0-2/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "ar" : 1,
               "ars" : 1
            }
         },
         "expression" : "n==0?0:n==1?1:n==2?2:3\u003C=n%100&&n%100\u003C=10?3:0\u003C=n%100&&n%100\u003C=2&&!(0\u003C=n&&n\u003C=2)?4:5",
         "forms" : [
            "is 0",
            "is 1",
            "is 2",
            "ends in 03-10",
            "ends in 00-02 excluding 0-2",
            "everything else"
         ],
         "serializations" : {
            "6:is 0/is 1/is 2/ends in 03-10/ends in 00-02 excluding 0-2/everything else" : {
               "expressions" : {
                  "n==0?0:n==1?1:n==2?2:3\u003C=n%100&&n%100\u003C=10?3:0\u003C=n%100&&n%100\u003C=2&&!(0\u003C=n&&n\u003C=2)?4:5" : 1
               },
               "fields" : "0/1/2/3/4/5"
            },
            "6:is 0/is 1/is 2/ends in 03-10/everything else/ends in 00-02 excluding 0-2" : {
               "expressions" : {
                  "(n==0?0:n==1?1:n==2?2:n%100>=3&&n%100\u003C=10?3:n%100>=11?4:5)" : 1,
                  "n==0?0:n==1?1:n==2?2:n%100>=3&&n%100\u003C=10?3:n%100>=11&&n%100\u003C=99?4:5" : 1,
                  "n==0?0:n==1?1:n==2?2:n%100>=3&&n%100\u003C=10?3:n%100>=11?4:5" : 1
               },
               "fields" : "0/1/2/3/5/4"
            },
            "6:is 1/is 2/ends in 03-10/everything else/ends in 00-02 excluding 0-2/is 0" : {
               "expressions" : {
                  "n==0?5:n==1?0:n==2?1:n%100>=3&&n%100\u003C=10?2:n%100>=11&&n%100\u003C=99?3:4" : 1
               },
               "fields" : "1/2/3/5/4/0",
               "mozilla_rule" : 12
            }
         }
      },
      "6:is 0/is 1/is 2/is 3/is 6/everything else" : {
         "cldr_locales" : {
            "cardinal" : {
               "cy" : 1
            }
         },
         "expression" : "n==0?0:n==1?1:n==2?2:n==3?3:n==6?4:5",
         "forms" : [
            "is 0",
            "is 1",
            "is 2",
            "is 3",
            "is 6",
            "everything else"
         ],
         "serializations" : {
            "6:is 0/is 1/is 2/is 3/is 6/everything else" : {
               "expressions" : {
                  "n==0?0:n==1?1:n==2?2:n==3?3:n==6?4:5" : 1
               },
               "fields" : "0/1/2/3/4/5"
            }
         }
      },
      "6:is 1/is 2/is 3, 4/is 5, 6/is 0, 7-9/everything else" : {
         "cldr_locales" : {
            "ordinal" : {
               "cy" : 1
            }
         },
         "expression" : "n==1?0:n==2?1:n==3||n==4?2:n==5||n==6?3:n==0||(7\u003C=n&&n\u003C=9)?4:5",
         "forms" : [
            "is 1",
            "is 2",
            "is 3, 4",
            "is 5, 6",
            "is 0, 7-9",
            "everything else"
         ],
         "serializations" : {
            "6:is 1/is 2/is 3, 4/is 5, 6/is 0, 7-9/everything else" : {
               "expressions" : {
                  "n==1?0:n==2?1:n==3||n==4?2:n==5||n==6?3:n==0||(7\u003C=n&&n\u003C=9)?4:5" : 1
               },
               "fields" : "0/1/2/3/4/5"
            }
         }
      }
   }
}
